
server.port=8089


spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://rm-bp18a079063jufo39o.mysql.rds.aliyuncs.com:3306/framework_final?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&rewriteBatchedStatements=TRUE&useSSL=false
spring.datasource.username=myroot
spring.datasource.password=admin123!@#
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:postgresql://127.0.0.1:54321/frame_work
#spring.datasource.username=postgres
#spring.datasource.password=116213
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.validationQuery=SELECT'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=true
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5

spring.datasource.maxActive=30
#配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 ;日志是slf4j，log4j改为slf4j

spring.datasource.filters=stat,wall,slf4j

# 打开PSCache，并且指定每个连接上PSCache的大小

spring.datasource.poolPreparedStatements=true

spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

login.un.filter=/starter/v1/users/*


#下面两行正常写法
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
#如果启用supportMethodsArguments参数，则pageHelper可以自动拦截请求参数中的pageNum,pageSize参数
#不启用supportMethodsArguments参数，则需使用PageHelper.startPage(pageNum,pageSize)方法调用
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

starter.jwt.expiration=60
starter.jwt.secret=framework-secret
starter.jwt.tokenHeader=STARTER_TOKEN
starter.jwt.tokenHead=

starter.dev.enable=true
starter.dev.userId=3
starter.dev.userName=weiwei